// Code generated by dagger-compiler.  Do not edit.
package br.com.mobiclub.quantoprima.config.module;


import dagger.internal.Binding;
import dagger.internal.Linker;
import dagger.internal.ModuleAdapter;
import java.util.Map;
import java.util.Set;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class MobiClubServiceModule$$ModuleAdapter extends ModuleAdapter<MobiClubServiceModule> {
  private static final String[] INJECTS = { };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { br.com.mobiclub.quantoprima.config.module.ServiceModule.class, };

  public MobiClubServiceModule$$ModuleAdapter() {
    super(INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, false /*complete*/, true /*library*/);
  }

  @Override
  protected MobiClubServiceModule newModule() {
    return new br.com.mobiclub.quantoprima.config.module.MobiClubServiceModule();
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(Map<String, Binding<?>> map) {
    map.put("br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi", new ProvideMobiClubServiceProvidesAdapter(module));
    map.put("retrofit.RestAdapter", new ProvideRestAdapterProvidesAdapter(module));
  }

  /**
   * A {@code Binder<br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   * 
   * Owning the dependency links between {@code br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi} and its
   * dependencies.
   * 
   * Being a {@code Provider<br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideMobiClubServiceProvidesAdapter extends Binding<br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi>
      implements Provider<br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi> {
    private final MobiClubServiceModule module;
    private Binding<retrofit.RestAdapter> restAdapter;

    public ProvideMobiClubServiceProvidesAdapter(MobiClubServiceModule module) {
      super("br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi", null, IS_SINGLETON, "br.com.mobiclub.quantoprima.config.module.MobiClubServiceModule.provideMobiClubService()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Used internally to link bindings/providers together at run time
     * according to their dependency graph.
     */
    @Override
    @SuppressWarnings("unchecked")
    public void attach(Linker linker) {
      restAdapter = (Binding<retrofit.RestAdapter>) linker.requestBinding("retrofit.RestAdapter", MobiClubServiceModule.class);
    }

    /**
     * Used internally obtain dependency information, such as for cyclical
     * graph detection.
     */
    @Override
    public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
      getBindings.add(restAdapter);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi>}.
     */
    @Override
    public br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi get() {
      return module.provideMobiClubService(restAdapter.get());
    }
  }

  /**
   * A {@code Binder<retrofit.RestAdapter>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   * 
   * Owning the dependency links between {@code retrofit.RestAdapter} and its
   * dependencies.
   * 
   * Being a {@code Provider<retrofit.RestAdapter>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideRestAdapterProvidesAdapter extends Binding<retrofit.RestAdapter>
      implements Provider<retrofit.RestAdapter> {
    private final MobiClubServiceModule module;
    private Binding<br.com.mobiclub.quantoprima.core.service.RestErrorHandler> restErrorHandler;
    private Binding<br.com.mobiclub.quantoprima.core.service.RestAdapterRequestInterceptor> restRequestInterceptor;
    private Binding<com.google.gson.Gson> gson;

    public ProvideRestAdapterProvidesAdapter(MobiClubServiceModule module) {
      super("retrofit.RestAdapter", null, IS_SINGLETON, "br.com.mobiclub.quantoprima.config.module.MobiClubServiceModule.provideRestAdapter()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Used internally to link bindings/providers together at run time
     * according to their dependency graph.
     */
    @Override
    @SuppressWarnings("unchecked")
    public void attach(Linker linker) {
      restErrorHandler = (Binding<br.com.mobiclub.quantoprima.core.service.RestErrorHandler>) linker.requestBinding("br.com.mobiclub.quantoprima.core.service.RestErrorHandler", MobiClubServiceModule.class);
      restRequestInterceptor = (Binding<br.com.mobiclub.quantoprima.core.service.RestAdapterRequestInterceptor>) linker.requestBinding("br.com.mobiclub.quantoprima.core.service.RestAdapterRequestInterceptor", MobiClubServiceModule.class);
      gson = (Binding<com.google.gson.Gson>) linker.requestBinding("com.google.gson.Gson", MobiClubServiceModule.class);
    }

    /**
     * Used internally obtain dependency information, such as for cyclical
     * graph detection.
     */
    @Override
    public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
      getBindings.add(restErrorHandler);
      getBindings.add(restRequestInterceptor);
      getBindings.add(gson);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<retrofit.RestAdapter>}.
     */
    @Override
    public retrofit.RestAdapter get() {
      return module.provideRestAdapter(restErrorHandler.get(), restRequestInterceptor.get(), gson.get());
    }
  }
}
