// Code generated by dagger-compiler.  Do not edit.
package br.com.mobiclub.quantoprima.ui.activity.account;


import dagger.MembersInjector;
import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;

/**
 * A {@code Binder<AccountActivity>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 * 
 * Owning the dependency links between {@code AccountActivity} and its
 * dependencies.
 * 
 * Being a {@code MembersInjector<AccountActivity>} and handling injection
 * of annotated fields.
 */
public final class AccountActivity$$InjectAdapter extends Binding<AccountActivity>
    implements MembersInjector<AccountActivity> {
  private Binding<br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi> mobiClubService;
  private Binding<com.squareup.otto.Bus> bus;
  private Binding<android.content.SharedPreferences> prefs;
  private Binding<br.com.mobiclub.quantoprima.service.authenticator.ActionBarAccountAuthenticatorActivity> supertype;

  public AccountActivity$$InjectAdapter() {
    super(null, "members/br.com.mobiclub.quantoprima.ui.activity.account.AccountActivity", NOT_SINGLETON, AccountActivity.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    mobiClubService = (Binding<br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi>) linker.requestBinding("br.com.mobiclub.quantoprima.core.service.MobiClubServiceApi", AccountActivity.class);
    bus = (Binding<com.squareup.otto.Bus>) linker.requestBinding("com.squareup.otto.Bus", AccountActivity.class);
    prefs = (Binding<android.content.SharedPreferences>) linker.requestBinding("android.content.SharedPreferences", AccountActivity.class);
    supertype = (Binding<br.com.mobiclub.quantoprima.service.authenticator.ActionBarAccountAuthenticatorActivity>) linker.requestBinding("members/br.com.mobiclub.quantoprima.service.authenticator.ActionBarAccountAuthenticatorActivity", AccountActivity.class, false, true);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    injectMembersBindings.add(mobiClubService);
    injectMembersBindings.add(bus);
    injectMembersBindings.add(prefs);
    injectMembersBindings.add(supertype);
  }

  /**
   * Injects any {@code @Inject} annotated fields in the given instance,
   * satisfying the contract for {@code Provider<AccountActivity>}.
   */
  @Override
  public void injectMembers(AccountActivity object) {
    object.mobiClubService = mobiClubService.get();
    object.bus = bus.get();
    object.prefs = prefs.get();
    supertype.injectMembers(object);
  }
}
